openapi: 3.1.0
info:
  title: Argent Bank Transaction API
  description: API model proposal for user transactions
  version: 2.0.0
  termsOfService: http://swagger.io/terms/
servers:
  - url: http://localhost:3001/api/v2
    description: Local server

components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    allTransactionsResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: object
          properties:
            transactions:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: Transaction ID
                  date:
                    type: string
                    format: date-time
                    description: Transaction date
                  amount:
                    type: number
                    format: float
                    description: Transaction amount
                  description:
                    type: string
                    description: Transaction description
                  category:
                    type: string
                    description: Transaction category
                  notes:
                    type: string
                    description: Transaction notes

    ApiTransactionResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: object
          properties:
            id:
              type: string
              description: Transaction ID
            date:
              type: string
              format: date-time
              description: Transaction date
            amount:
              type: number
              format: float
              description: Transaction amount
            description:
              type: string
              description: Transaction description
            category:
              type: string
              description: Transaction category
            notes:
              type: string
              description: Transaction notes

    addTransaction:
      type: object
      properties:
        accountId:
          type: string
          description: Account ID containing the new transaction
        amount:
          type: number
          format: float
          description: Amount of the new transaction
        description:
          type: string
          description: Description of the new transaction
        category:
          type: string
          description: Category of the new transaction
        notes:
          type: string
          description: Notes of the new transaction

    editTransaction:
      type: object
      properties:
        category:
          type: string
          description: New category of this transaction
        notes:
          type: string
          description: New notes of this transaction

paths:
  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction module
      summary: Transactions Current Month API
      description: API for fetching current month transactions
      parameters:
        - in: header
          name: Authorization
          required: true
          description: Bearer JWT token
          schema:
            type: string
      responses:
        200:
          description: User transactions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/allTransactionsResponse'
        400:
          description: Invalid Fields
        401:
          description: Unauthorized
        404:
          description: Transactions not found
        500:
          description: Internal Server Error

  /user/transaction:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction module
      summary: Transaction Add API
      description: API for adding a new transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addTransaction'
      responses:
        201:
          description: Transaction added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTransactionResponse'
        400:
          description: Invalid Fields
        401:
          description: Unauthorized
        500:
          description: Internal Server Error

  /user/transaction/{idTransaction}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction module
      summary: Transaction Show API
      description: API for showing a transaction
      parameters:
        - in: path
          name: idTransaction
          required: true
          description: ID of the transaction
          schema:
            type: string
        - in: header
          name: Authorization
          required: true
          description: Bearer JWT token
          schema:
            type: string
      responses:
        200:
          description: Transaction retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTransactionResponse'
        400:
          description: Invalid Fields
        401:
          description: Unauthorized
        404:
          description: Transaction not found
        500:
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - Transaction module
      summary: Transaction Edit API
      description: API for updating a transaction
      parameters:
        - in: path
          name: idTransaction
          required: true
          description: ID of the transaction
          schema:
            type: string
        - in: header
          name: Authorization
          required: true
          description: Bearer JWT token
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editTransaction'
      responses:
        200:
          description: Transaction edited successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTransactionResponse'
        400:
          description: Invalid Fields
        401:
          description: Unauthorized
        404:
          description: Transaction not found
        500:
          description: Internal Server Error

    delete:
      security:
        - Bearer: []
      tags:
        - Transaction module
      summary: Transaction Delete API
      description: API for deleting a transaction
      parameters:
        - in: path
          name: idTransaction
          required: true
          description: ID of the transaction
          schema:
            type: string
        - in: header
          name: Authorization
          required: true
          description: Bearer JWT token
          schema:
            type: string
      responses:
        200:
          description: Transaction deleted successfully
        500:
          description: Internal Server Error